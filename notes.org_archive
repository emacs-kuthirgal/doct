#    -*- mode: org -*-


Archived entries from file /home/n/.emacs.d/lisp/doct/notes.org
* 2020
** 2020-01 January
*** 2020-01-18 Saturday
**** DONE Update tests.
CLOSED: [2020-01-18 Sat 14:15]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:01
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
**** DONE inline %doct expansion?
CLOSED: [2020-01-18 Sat 14:14]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:02
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
we can't do it yet. %doct:val%doct:another will fail...
recursively parse the :keyword section? have to be mindful of prefix and postfix characters...
**** DONE Update documentation to reflect API changes, new features
CLOSED: [2020-01-18 Sat 14:14]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:02
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
**** DONE group settings
CLOSED: [2020-01-18 Sat 14:14]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 15:24
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Features
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: feature
:END:
Allow form's name to be a symbol.
Its children inherit its properties, but it is not included in the final list.
This would allow 'global' settings for all templates or settings for groups of parents.

*** 2020-01-19 Sunday
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::;;@FIX some of these should probably be warnings instead of errors][doct--validate-file substitute errors for warning where appropriate]]
CLOSED: [2020-01-19 Sun 13:15]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:02
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::;;@OPTIMIZE don't need to compute additive keyword every time.][doct--get only compute keyword once]]
CLOSED: [2020-01-19 Sun 13:17]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:02
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: optimization
:END:
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::(defmacro doct--defer-merge (keyword values)][add checks to prevent unnecessary merge deferral]]
CLOSED: [2020-01-19 Sun 13:16]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:02
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: optimization
:END:
If the values are atoms (not user defined) and constants,
we shouldn't have to defer merging them. A special case is a string utilizing the ~%doct~
expansion syntax.
**** CANCELED [[file:~/.emacs.d/straight/repos/doct/doct.el::;;@MAYBE warn if no file extension][doct--template warn if no file extension?]]
CLOSED: [2020-01-19 Sun 13:15]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 15:24
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Features
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: CANCELED
:ARCHIVE_ITAGS: feature
:END:
- State "CANCELED"   from "IDEA"       [2020-01-19 Sun 13:15] \\
  Unnecessary. org-capture correctly changes file to Org mode and issues warning.

*** 2020-01-26 Sunday
**** DONE add proper autoloads
CLOSED: [2020-01-26 Sun 15:01]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:02
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
doct, other user-facing commands/procedures
**** DONE [#B] Single pass recursion to compute all properties?
CLOSED: [2020-01-26 Sun 15:02]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:02
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: optimization
:END:
Is it possible without getting unwieldy?
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::;;@INCOMPLETE: add rest of custom spec][finish defcustom specs]]
CLOSED: [2020-01-26 Sun 15:01]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 15:24
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Documentation
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: documentation
:END:
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::;;@FIX needs overview docstring][doct needs overview documentation]]
CLOSED: [2020-01-26 Sun 15:01]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 15:24
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Documentation
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: documentation
:END:

** 2020-02 February
*** 2020-02-21 Friday
**** DONE Go through and get all possible types for template components
CLOSED: [2020-02-21 Fri 15:29]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 15:29
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: optimization
:END:
Right now we have `doct--variable-p' and `doct--should-warn-p' etc.
There's probably an optimization to be made here.
Will lead to simpler code.

***** Keywords

***** file-extension
| Keyword   | Types           | Warn? |
|-----------+-----------------+-------|
| :datetree | boolean         |       |
| :function | symbol function | x     |
| :headline | string          |       |
| :regexp   | string          |       |
| :olp      | (string)        |       |

***** exclusive locations
| Keyword   | Types                  | Warn? |
|-----------+------------------------+-------|
| :clock    | boolean                |       |
| :file     | string symbol function | x     |
| :function | symbol function        | x     |
| :id       | string                 |       |

***** hooks
| Keyword           | Types           | Warn? |
|-------------------+-----------------+-------|
| :after-finalize   | function symbol | x     |
| :before-finalize  | ''              | x     |
| :hook             | ''              | x     |
| :prepare-finalize | ''              | x     |

***** contexts
| Keyword      | Types                | Warn? |
|--------------+----------------------+-------|
| :in/unless-* | stringp list         |       |
| :function    | function symbol      | x     |
| :when/unless | function symbol list | x     |

***** template
| Keyword        | Types                       | Warn? |
|----------------+-----------------------------+-------|
| :template      | string list function symbol | x     |
| :template-file | string symbol               | x     |

***** doct words
| Keyword   | Types   |
|-----------+---------|
| children  | list    |
| contexts  | list    |
| custom    | plist   |
| disabled  | boolean |
| doct-keys | string  |
| keys      | string  |
| doct-warn | boolean |
| type      | symbol  |


*** 2020-02-22 Saturday
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::(when extension][design flaw? Are we able to override inheritance w nil values?]]
CLOSED: [2020-02-22 Sat 15:28]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:02
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
**** DONE We don't handle deprecated file+datetree syntax...
CLOSED: [2020-02-22 Sat 15:28]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 14:02
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
Use org-capture-upgrade-templates in doct or polyfill it?
**** DONE :disable keyword which just creates a context blocking template from all buffers?
CLOSED: [2020-02-22 Sat 15:28]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 15:25
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Features
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: feature
:END:
**** DONE contexts
CLOSED: [2020-02-22 Sat 15:29]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 15:25
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Features
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: feature
:END:
These are the rules for validating a key defined in org.el:
#+begin_src emacs-lisp
(defun org-contextualize-validate-key (key contexts)
  "Check CONTEXTS for agenda or capture KEY."
  (let (res)
    (dolist (r contexts)
      (dolist (rr (car (last r)))
        (when
            (and (equal key (car r))
                 (if (functionp rr) (funcall rr)
                   (or (and (eq (car rr) 'in-file)
                            (buffer-file-name)
                            (string-match (cdr rr) (buffer-file-name)))
                       (and (eq (car rr) 'in-mode)
                            (string-match (cdr rr) (symbol-name major-mode)))
                       (and (eq (car rr) 'in-buffer)
                            (string-match (cdr rr) (buffer-name)))
                       (when (and (eq (car rr) 'not-in-file)
                                  (buffer-file-name))
                         (not (string-match (cdr rr) (buffer-file-name))))
                       (when (eq (car rr) 'not-in-mode)
                         (not (string-match (cdr rr) (symbol-name major-mode))))
                       (when (eq (car rr) 'not-in-buffer)
                         (not (string-match (cdr rr) (buffer-name)))))))
          (push r res))))
    (delete-dups (delq nil res))))
#+end_src
#+begin_src emacs-lisp
("context" :keys "c"
 :context ([:keys "w"]
           :in-mode (one two three) | one
           :not-in-mode (one two three) | one
           :in-buffer ("one.org" "two.org") | "one.org"
           :not-in-buffer ("one.org" "two.org") | "one.org"
           :function (lambda () t) | (one two three)

           (setq org-capture-templates-contexts
                 '(("n" "t" ((lambda () nil)))))

           (plist-get '(:doct_ ("one" "two" "three") :keys "x") :doct_)

           :in-mode ((major-mode "t")
                     (second-mode third-mode "x")
                     (fourth "z"))
           :hide-in-mode
           :hide-in-mode))
#+end_src

#+begin_src emacs-lisp
(defun doct-plist-p (list)
  "Non-null if and only if LIST is a plist with keyword keys."
  (while (consp list)
    (setq list (if (and (keywordp (car list))
                        (consp (cdr list)))
                   (cddr list)
                 'not-plist)))
  (null list))
#+end_src
***** rough sketch
#+name: properties
#+begin_src emacs-lisp
'(:doct-keys "xp" :contexts ((:unless-file "one.org")
                             (:in-file ("one.org" "two.org") :keys "xp")))
#+end_src

#+RESULTS: properties
| :doct-keys | xp | :contexts | ((:unless-file one.org) (:in-buffer (one.org two.org) :keys xp)) |


#+begin_src emacs-lisp :var properties=properties :results replace scalar
(defvar doct-context-keywords '(:in-buffer
                                :in-file
                                :in-mode
                                :unless-buffer
                                :unless-file
                                :unless-mode
                                :function))

(pp
 (doct--add-contexts properties))
#+end_src

#+RESULTS:
#+begin_example
"((\"xp\"
  ((not-in-file . \"one.org\")))
 (\"xp\" \"xp\"
  (#'(lambda nil
       (seq-some
        (lambda
          (val)
          (string-match val
                        (or
                         (buffer-file-name)
                         \"\")))
        '(\"one.org\" \"two.org\"))))))
"
#+end_example

#+begin_src emacs-lisp
(setq org-capture-templates-contexts '(("n" ((lambda () (not (member major-mode '(org-mode elisp-mode wikinforg))))))))
#+end_src
*** 2020-02-23 Sunday
**** DONE type check custom options
CLOSED: [2020-02-23 Sun 15:28]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-02 Mon 15:28
:ARCHIVE_FILE: ~/.emacs.d/lisp/doct/notes.org
:ARCHIVE_OLPATH: Features
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: feature
:END:
e.g. :empty-lines* -> numberp
     :table-line-pos -> ?
     :tree-type
     warn if not valid type.

| Keyword             | Type          | Check?                                                                       |
|---------------------+---------------+------------------------------------------------------------------------------|
| :clock-in           | boolean       |                                                                              |
| :clock-keep         | boolean       |                                                                              |
| :clock-resume       | boolean       |                                                                              |
| :unnarrowed         | boolean       |                                                                              |
| :prepend            | boolean       |                                                                              |
| :immediate-finish   | boolean       |                                                                              |
| :jump-to-captured   | boolean       |                                                                              |
| :kill-buffer        | boolean       |                                                                              |
| :no-save            | boolean       |                                                                              |
| :time-prompt        | boolean       |                                                                              |
| :empty-lines        | integer       | integerp                                                                     |
| :empty-lines-after  | integer       | integerp                                                                     |
| :empty-lines-before | integer       | integerp                                                                     |
| :table-line-pos     | string        | stringp                                                                      |
| :tree-type          | 'week 'month? | warn if not one of these, it'll still work but may not be what user intended |
|---------------------+---------------+------------------------------------------------------------------------------|

Skipping the booleans because they only need to be non-nil or nil (not strictly 't').
** 2020-03 March
*** 2020-03-03 Tuesday
**** DONE rename doct-after-conversion-hook
CLOSED: [2020-03-03 Tue 10:52]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-13 Fri 00:52
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
Convention for -hook suffix denotes normal hook.
This is an abnormal hook. Should be ~doct-after-conversion-functions~.
*** 2020-03-08 Sunday
**** CANCELED [[file:~/.emacs.d/straight/repos/doct/doct.el::defun doct--target-file (file-target][doct--target-file has duplicate logic. Function is long.]]
CLOSED: [2020-03-08 Sun 15:34]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-13 Fri 00:53
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: CANCELED
:ARCHIVE_ITAGS: optimization
:END:
- State "CANCELED"   from "TODO"       [2020-03-08 Sun 15:34] \\
  Not technically duplicate logic.
  I can live with function length.
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::defun doct-get (keyword][doct-get should warn when keyword does not exist on declaration (custom, or otherwise)]]
CLOSED: [2020-03-08 Sun 19:30]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-13 Fri 00:53
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Enhancements
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: enhancement
:END:
This would help in diagnosing typos in template expansion strings
e.g.
#+begin_src emacs-lisp
(:keyword val :template "%doct(keyward)")
#+end_src
should issue warning along the lines of:

#+begin_src emacs-lisp
"%doct(keyward), :keyward not found in declaration:
(:keyword val :template \"%doct(keyward)\")"
#+end_src
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el:::doct-warn][change :doct-warn to :warn?]]
CLOSED: [2020-03-08 Sun 15:37]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-13 Fri 00:53
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Miscellaneous
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: misc
:END:

*** 2020-03-12 Thursday
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::defun doct--entry-type (][when template string is not deferred, check that it conforms to template entry type]]
CLOSED: [2020-03-12 Thu 18:27]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-13 Fri 00:53
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Enhancements
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: enhancement
:END:
- State "STARTED"    from "IDEA"       [2020-03-12 Thu 12:13]
e.g.
#+begin_src emacs-lisp
(... :type entry :template "no leading star")
#+end_src
will throw at capture time because it is not a valid entry string
We could catch this error at conversion time.

***** DONE any other errors we can catch for other types?
CLOSED: [2020-03-12 Thu 18:27]
| Entry type | Warn? | values                                                     |
|------------+-------+------------------------------------------------------------|
| entry      | yes   | empty string fine, string without leading stars fails      |
| item       | no    | +,-,digit.                                                 |
| checkitem  | no    | any string                                                 |
| table-line | yes   | empty string, string w each line starting w pipe character |
| plain      | no    | any string                                                 |

**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::letrec ((flatten (lambda (list][refactor to get rid of letrec. Use an accumulator argument instead.]]
CLOSED: [2020-03-12 Thu 18:39]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-13 Fri 00:53
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Enhancements
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: enhancement
:END:
letrec allows locally defined recursive functions, but this is probably less idiomatic than having a formal accumlator argument:

#+begin_src emacs-lisp
(defun doct-flatten-lists-in (list &optional acc)
  ;;...
  )
#+end_src

*** 2020-03-13 Friday
**** DONE :hook isn't run after filling function out. Fix documentation.
CLOSED: [2020-03-13 Fri 00:52]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-13 Fri 00:53
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Documentation
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: documentation
:END:
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::let ((target-list (or plist doct--current-plist))][rename hyphenated local vars]]
CLOSED: [2020-03-13 Fri 00:52]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-13 Fri 00:53
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Enhancements
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: enhancement
:END:
Can cause uninteneded conflict with dynamic variables.
**** DONE Simplify doct--keys logic
CLOSED: [2020-03-13 Fri 14:46]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-17 Tue 20:48
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: optimization
:END:
Do we really need to add :doct-keys as a separate property?
**** DONE make :doct proper plist
CLOSED: [2020-03-13 Fri 13:02]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-17 Tue 20:48
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Enhancements
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: enhancement
:END:
just add description as :doct-name?
You can rebuild without that property in errors/warnings if necessary.
Then %doct(doct-name) would allow introspection of org-plist :description.

*** 2020-03-17 Tuesday
**** DONE tests for all code examples
CLOSED: [2020-03-17 Tue 20:48]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-17 Tue 20:48
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Documentation
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: documentation
:END:
People often test packages "by the examples". Don't scare them away.
*** 2020-03-22 Sunday
**** DONE fix inaccurate return value in [[file:README.org::#custom-data][Custom data]]
CLOSED: [2020-03-22 Sun 14:17]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-22 Sun 14:18
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Documentation
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: documentation
:END:
 :doct-custom is now member of :doct
**** DONE get rid of references to 'capture time' in tests
CLOSED: [2020-03-22 Sun 14:13]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-22 Sun 14:18
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Documentation
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: documentation
:END:
Should just be run time.
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::dolist (heading (nreverse (seq-copy path))][Do we still need this?]]
CLOSED: [2020-03-22 Sun 14:16]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-22 Sun 14:18
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: optimization
:END:
- Note taken on [2020-03-22 Sun 14:16] \\
  Removing it does not cause any test failures.
  We're also copying declarations before operating on them.
  Should not be an issue.
We're copying declarations before operating on them now.
*** 2020-03-24 Tuesday
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::unless (string-prefix-p "*" (string-trim string)][warns for elisp cases ]]
CLOSED: [2020-03-24 Tue 22:50]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-24 Tue 22:50
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
and file inclusion syntax
e.g.
#+begin_src emacs-lisp
(:template "%()")
(:template "%[]")
#+end_src
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::(defcustom doct-warnings t][need to finish custom spec]]
CLOSED: [2020-03-24 Tue 22:50]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-24 Tue 22:50
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:

doct-warnings can be nil, t, or a list of pre-defined symbols
*** 2020-03-26 Thursday
**** DONE execute functions for custom metadata?
CLOSED: [2020-03-26 Thu 15:04]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-26 Thu 15:04
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Enhancements
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: enhancement
:END:
#+begin_src emacs-lisp
("example" :keys "e" :file ""
 :test (lambda () "returns a string")
 ;;doct--fill-template calls the function
 :template "%doct(test)")
#+end_src
*** 2020-03-29 Sunday
**** DONE use simpler syntax for keyword expansion
CLOSED: [2020-03-29 Sun 12:21]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-29 Sun 12:21
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Enhancements
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: enhancement
:END:
#+begin_src emacs-lisp
(:template "%{keyword}")
#+end_src
Would be compatible with org-roam
***** DONE open rfc issue for current users
CLOSED: [2020-03-29 Sun 12:20]
- State "STARTED"    from "TODO"       [2020-03-22 Sun 14:55]
  It's a breaking change.
*** 2020-03-30 Monday
**** DONE do we need to depend on org-capture?
CLOSED: [2020-03-30 Mon 23:21]
:PROPERTIES:
:ARCHIVE_TIME: 2020-04-04 Sat 19:55
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Miscellaneous
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: misc
:END:
Only using  ~org-capture-plist~ at runtime.
org-capture loaded by then.
we also add to: org-capture-hooks, org-capture-contexts
OK to defvar these before org-capture loaded?

*** 2020-03-31 Tuesday
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::`(:template-file ,file][warn if file does not exist during conversion]]
CLOSED: [2020-03-31 Tue 02:19]
:PROPERTIES:
:ARCHIVE_TIME: 2020-03-31 Tue 02:19
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Enhancements
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: enhancement
:END:
Common case is for the file to exist during conversion.
Warn here if it does not. It's possible to create the file after conversion, but before capture, but users can disable that particular warning when appropriate.
** 2020-04 April
*** 2020-04-04 Saturday
**** DONE fix hook definition
CLOSED: [2020-04-04 Sat 14:08]
:PROPERTIES:
:ARCHIVE_TIME: 2020-04-04 Sat 14:10
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
Since we're not depending on org-capture, we defvar its hooks.
Can't add to them when they're void. Setting to nil (current solution)
works but makes doct claim ownership of those variables. e.g.
documentation claims variable is defined in doct.
***** DONE is there a way to push without 'owning' variable and not loading org-capture first?
CLOSED: [2020-04-04 Sat 14:08]
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::(fn (fset fn-name][unused lexical var 'fn']]
CLOSED: [2020-04-04 Sat 14:09]
:PROPERTIES:
:ARCHIVE_TIME: 2020-04-04 Sat 14:10
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:

**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::unless (or (stringp name) group][make use of doct--type-check here?]]
CLOSED: [2020-04-04 Sat 14:25]
:PROPERTIES:
:ARCHIVE_TIME: 2020-04-04 Sat 14:25
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: optimization
:END:

**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::doct--type-check :children children '(doct--child-list-p)][doct--type-check return value when check passes]]
CLOSED: [2020-04-04 Sat 16:09]
:PROPERTIES:
:ARCHIVE_TIME: 2020-04-04 Sat 16:09
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: optimization
:END:
**** DONE [[file:~/.emacs.d/straight/repos/doct/doct.el::doct--type-check :children children '(doct--child-list-p)][doct--type-check return value when check passes]]
CLOSED: [2020-04-04 Sat 16:09]
:PROPERTIES:
:ARCHIVE_TIME: 2020-04-04 Sat 16:09
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Optimizations
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: optimization
:END:
**** DONE add doct-unload-function
CLOSED: [2020-04-04 Sat 19:55]
:PROPERTIES:
:ARCHIVE_TIME: 2020-04-04 Sat 19:55
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Features
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: feature
:END:
remove installed hooks
https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html
https://www.gnu.org/software/emacs/manual/html_node/elisp/Unloading.html#Unloading
**** DONE doct expansion syntax escaping
CLOSED: [2020-04-04 Sat 23:30]
:PROPERTIES:
:ARCHIVE_TIME: 2020-04-04 Sat 23:30
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Features
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: feature
:END:
- State "STARTED"    from "IDEA"       [2020-04-04 Sat 20:09]
#+begin_src emacs-lisp
"%{interpreted} \%{verbatim}"
#+end_src
*** 2020-04-05 Sunday
**** CANCELED doct expansion syntax back refs?
CLOSED: [2020-04-05 Sun 13:38]
:PROPERTIES:
:ARCHIVE_TIME: 2020-04-05 Sun 13:38
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Features
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: CANCELED
:ARCHIVE_ITAGS: feature
:END:
- State "CANCELED"   from "IDEA"       [2020-04-05 Sun 13:38] \\
  Too complex for little benefit.
#+begin_src emacs-lisp
"%{data} %{\1}"
#+end_src
** 2020-05 May
*** 2020-05-04 Monday
**** DONE overlapping captures & doct-get?
CLOSED: [2020-05-04 Mon 12:41]
:PROPERTIES:
:ARCHIVE_TIME: 2020-05-04 Mon 12:41
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
- State "DONE"       from "CANCELED"   [2020-04-05 Sun 13:37]
- State "STARTED"    from "CANCELED"   [2020-03-30 Mon 23:14]
From ~org-capture-current-plist~ docstring:
#+begin_src emacs-lisp
  "Local variable holding the plist in a capture buffer.
This is used to store the plist for use when finishing a capture process
because another such process might have changed the global variable by then.

Each time a new capture buffer has been set up, the global `org-capture-plist'
is copied to this variable, which is local in the indirect buffer.")
#+end_src

Use =org-capture-plist= up to and before =org-capture-mode-hook=
Really, we should have access to =orc-capture-current-plist= during =org-capture-mode-hook=, but it's not set until after.
Submitted a patch to change that: https://lists.gnu.org/archive/html/emacs-orgmode/2020-05/msg00047.html
=org-capture-after-finalize-hook= does not have access to =org-capture-current-plist= because the capture buffer is not the current buffer when it runs.
To solve this we set =org-capture-plist= to =org-capture-current-plist= during the =org-capture-before-finalize-hook=.
This seems to cover most cases of overlapping capture templates.


***** CANCELED reliable test for overlapping templates
CLOSED: [2020-05-04 Mon 12:41]
- State "CANCELED"   from "TODO"       [2020-05-04 Mon 12:41]
- State "TODO"       from "CANCELED"   [2020-05-01 Fri 15:39]
- State "CANCELED"   from "TODO"       [2020-04-05 Sun 13:37]
****** DONE Use hooks to simulate overlap
CLOSED: [2020-05-04 Mon 12:41]
- State "TODO"       from "CANCELED"   [2020-05-01 Fri 15:39]
- State "CANCELED"   from "TODO"       [2020-04-05 Sun 13:37]
- Call first template. It calls ~doct-get~ in a finalizing hook to add info to the template.
- It calls second template in its ~:hook~.
- Second template set to fill and ~:immediate-finish~.
- It's finalizing hook finalizes first template.

**** DONE in-file context does not work for indirect buffers
CLOSED: [2020-05-04 Mon 12:46]
:PROPERTIES:
:ARCHIVE_TIME: 2020-05-04 Mon 12:46
:ARCHIVE_FILE: ~/.emacs.d/straight/repos/doct/notes.org
:ARCHIVE_OLPATH: Bugs
:ARCHIVE_CATEGORY: notes
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: bug
:END:
